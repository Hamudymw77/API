openapi: 3.0.0
info:
  title: Digitální evidence doporučení SPU
  version: 1.0.0
  description: |
    REST API pro správu doporučení a podpůrných opatření pro žáky se specifickými poruchami učení (SPU).
    Tento systém slouží k digitalizaci a evidenci individuálních doporučení ve školním prostředí.
servers:
  - url: http://localhost:8080
    description: Lokální vývojové prostředí
  - url: https://api.spu-system.cz
    description: Produkční prostředí

tags:
  - name: Users
    description: Správa uživatelů a přihlašování (Admin)
  - name: Students
    description: Evidence žáků
  - name: Categories
    description: Kategorie doporučení (např. Didaktický test, Slohová práce)
  - name: Templates
    description: Položky doporučení (šablony)
  - name: Recommendations
    description: Individuální doporučení žáků

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: VALIDATION_ERROR
        message:
          type: string
          example: Pole 'title' je povinné.

    User:
      type: object
      required: [id, username, role, email]
      properties:
        id: { type: integer, example: 1 }
        username: { type: string, example: admin }
        role: { type: string, example: Admin }
        email: { type: string, format: email }

    Student:
      type: object
      required: [id, firstName, lastName, class]
      properties:
        id: { type: integer, example: 101 }
        firstName: { type: string, example: Jan }
        lastName: { type: string, example: Novák }
        class: { type: string, example: 4.A }
        userId: { type: integer, example: 10 }

    Category:
      type: object
      required: [id, name]
      properties:
        id: { type: integer, example: 1 }
        name: { type: string, example: Didaktický test }
        description: { type: string, example: Kategorie pro písemnou část zkoušky }

    Template:
      type: object
      required: [id, categoryId, text]
      properties:
        id: { type: integer, example: 200 }
        categoryId: { type: integer, example: 1 }
        text: { type: string, example: "Prodloužení času o 25%" }
        isActive: { type: boolean, example: true }
        createdAt: { type: string, format: date-time, example: 2025-10-31T08:30:00Z }

    Recommendation:
      type: object
      required: [id, studentId, categoryId, createdBy, items]
      properties:
        id: { type: integer, example: 500 }
        studentId: { type: integer, example: 101 }
        categoryId: { type: integer, example: 1 }
        createdBy: { type: integer, example: 5 }
        createdAt: { type: string, format: date-time, example: 2025-10-31T10:00:00Z }
        updatedAt: { type: string, format: date-time, example: 2025-10-31T11:00:00Z }
        items:
          type: array
          items:
            $ref: '#/components/schemas/Template'

paths:
  /login:
    post:
      tags: [Users]
      summary: Přihlášení uživatele
      description: Vrací JWT token po úspěšném ověření přihlašovacích údajů.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username: { type: string, example: "admin" }
                password: { type: string, example: "admin123" }
      responses:
        '200':
          description: Úspěšné přihlášení
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string, example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
        '401':
          description: Neplatné přihlašovací údaje
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      tags: [Users]
      summary: Seznam všech uživatelů
      security: [ { bearerAuth: [] } ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/User' }

    post:
      tags: [Users]
      summary: Vytvořit nového uživatele
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Vytvořen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Chybný vstup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /students:
    get:
      tags: [Students]
      summary: Seznam všech žáků
      security: [ { bearerAuth: [] } ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Student' }

    post:
      tags: [Students]
      summary: Přidat nového žáka
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Žák vytvořen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

  /students/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: integer }
    get:
      tags: [Students]
      summary: Detail žáka
      security: [ { bearerAuth: [] } ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Student' }
        '404':
          description: Žák nenalezen

    delete:
      tags: [Students]
      summary: Smazat žáka
      security: [ { bearerAuth: [] } ]
      responses:
        '204': { description: Žák smazán }
        '404': { description: Žák nenalezen }

  /categories:
    get:
      tags: [Categories]
      summary: Seznam kategorií doporučení
      security: [ { bearerAuth: [] } ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Category' }

  /templates:
    get:
      tags: [Templates]
      summary: Seznam všech šablon doporučení
      security: [ { bearerAuth: [] } ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Template' }

    post:
      tags: [Templates]
      summary: Vytvořit novou šablonu doporučení
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
      responses:
        '201':
          description: Šablona vytvořena
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'

  /templates/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: integer }
    get:
      tags: [Templates]
      summary: Detail šablony
      security: [ { bearerAuth: [] } ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Template' }
        '404':
          description: Šablona nenalezena
    delete:
      tags: [Templates]
      summary: Smazat šablonu doporučení
      security: [ { bearerAuth: [] } ]
      responses:
        '204': { description: Šablona smazána }

  /recommendations:
    get:
      tags: [Recommendations]
      summary: Seznam všech individuálních doporučení
      security: [ { bearerAuth: [] } ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Recommendation' }

    post:
      tags: [Recommendations]
      summary: Vytvořit nové doporučení
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recommendation'
      responses:
        '201':
          description: Doporučení vytvořeno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
        '400':
          description: Chybná data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /recommendations/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: integer }
    get:
      tags: [Recommendations]
      summary: Detail doporučení
      security: [ { bearerAuth: [] } ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
        '404':
          description: Doporučení nenalezeno

    delete:
      tags: [Recommendations]
      summary: Smazat doporučení
      security: [ { bearerAuth: [] } ]
      responses:
        '204': { description: Doporučení smazáno }
        '404': { description: Doporučení nenalezeno }
